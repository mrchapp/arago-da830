From bf2b23d86a227f3350e610d6b53595b35a356eb5 Mon Sep 17 00:00:00 2001
From: Hardik Shah <hardik.shah@ti.com>
Date: Mon, 16 Feb 2009 16:38:45 +0530
Subject: [PATCH 295/364] Added support for Background color in DSS library

---
 arch/arm/plat-omap/dss/dispc.c            |   12 +++++++++++
 arch/arm/plat-omap/dss/dpi.c              |   31 +++++++++++++++++++++++++++++
 arch/arm/plat-omap/dss/dss.h              |    3 +-
 arch/arm/plat-omap/dss/venc.c             |   14 +++++++++++++
 arch/arm/plat-omap/include/mach/display.h |    5 +++-
 5 files changed, 63 insertions(+), 2 deletions(-)

diff --git a/arch/arm/plat-omap/dss/dispc.c b/arch/arm/plat-omap/dss/dispc.c
index ae4a966..72db1b0 100644
--- a/arch/arm/plat-omap/dss/dispc.c
+++ b/arch/arm/plat-omap/dss/dispc.c
@@ -1282,6 +1282,18 @@ void omap_dispc_set_default_color(enum omap_channel channel, u32 color)
 	enable_clocks(0);
 }
 
+int omap_dispc_get_default_color(enum omap_channel channel)
+{
+	const struct dispc_reg def_reg[] = { DISPC_DEFAULT_COLOR0,
+				DISPC_DEFAULT_COLOR1 };
+
+	unsigned int color;
+	enable_clocks(1);
+	color = dispc_read_reg(def_reg[channel]);
+	enable_clocks(0);
+	return color;
+}
+
 void omap_dispc_set_trans_key(enum omap_channel ch,
 		enum omap_dss_color_key_type type,
 		u32 trans_key)
diff --git a/arch/arm/plat-omap/dss/dpi.c b/arch/arm/plat-omap/dss/dpi.c
index 8b680ed..d749f0c 100644
--- a/arch/arm/plat-omap/dss/dpi.c
+++ b/arch/arm/plat-omap/dss/dpi.c
@@ -138,12 +138,29 @@ static int dpi_display_enable(struct omap_display *display)
 	dispc_set_burst_size(OMAP_DSS_VIDEO1, OMAP_DSS_BURST_16x32);
 	dispc_set_burst_size(OMAP_DSS_VIDEO2, OMAP_DSS_BURST_16x32);
 
+<<<<<<< HEAD:arch/arm/plat-omap/dss/dpi.c
 	dispc_setup_plane_fifo(OMAP_DSS_GFX, OMAP_DSS_FIFO_LOW_THRESHOLD,
 			OMAP_DSS_FIFO_HIGH_THRESHOLD);
 	dispc_setup_plane_fifo(OMAP_DSS_VIDEO1, OMAP_DSS_FIFO_LOW_THRESHOLD,
 			OMAP_DSS_FIFO_HIGH_THRESHOLD);
 	dispc_setup_plane_fifo(OMAP_DSS_VIDEO1, OMAP_DSS_FIFO_LOW_THRESHOLD,
 			OMAP_DSS_FIFO_HIGH_THRESHOLD);
+=======
+	burst = 16 * 32 / 8;
+
+	high = dispc_get_plane_fifo_size(OMAP_DSS_GFX) - burst;
+	low = dispc_get_plane_fifo_size(OMAP_DSS_GFX) / 4;
+	dispc_setup_plane_fifo(OMAP_DSS_GFX, low, high);
+
+	high = dispc_get_plane_fifo_size(OMAP_DSS_VIDEO1) - burst;
+	low = dispc_get_plane_fifo_size(OMAP_DSS_VIDEO1) / 4;
+
+	dispc_setup_plane_fifo(OMAP_DSS_VIDEO1, 0x03bc, 0x03fc);
+
+	high = dispc_get_plane_fifo_size(OMAP_DSS_VIDEO2) - burst;
+	low = dispc_get_plane_fifo_size(OMAP_DSS_VIDEO2) / 4;
+		dispc_setup_plane_fifo(OMAP_DSS_VIDEO1, 0x03bc, 0x03fc);
+>>>>>>> ce9884f... Added support for Background color in DSS library:arch/arm/plat-omap/dss/dpi.c
 
 	dpi_set_mode(display);
 
@@ -225,6 +242,18 @@ static void dpi_set_timings(struct omap_display *display,
 	}
 }
 
+static void dpi_display_set_bg_color(struct omap_display *display,
+			unsigned int color)
+{
+	omap_dispc_set_default_color(OMAP_DSS_CHANNEL_LCD, color);
+	dispc_go(OMAP_DSS_CHANNEL_LCD);
+}
+
+static int dpi_display_get_bg_color(struct omap_display *display)
+{
+	return omap_dispc_get_default_color(OMAP_DSS_CHANNEL_LCD);
+}
+
 static int dpi_check_timings(struct omap_display *display,
 			struct omap_video_timings *timings)
 {
@@ -328,6 +357,8 @@ void dpi_init_display(struct omap_display *display)
 	display->get_timings = dpi_get_timings;
 	display->set_update_mode = dpi_display_set_update_mode;
 	display->get_update_mode = dpi_display_get_update_mode;
+	display->set_bg_color = dpi_display_set_bg_color;
+	display->get_bg_color = dpi_display_get_bg_color;
 }
 
 int dpi_init(void)
diff --git a/arch/arm/plat-omap/dss/dss.h b/arch/arm/plat-omap/dss/dss.h
index c77412b..9c2b281 100644
--- a/arch/arm/plat-omap/dss/dss.h
+++ b/arch/arm/plat-omap/dss/dss.h
@@ -229,7 +229,6 @@ void dispc_set_tft_data_lines(int data_lines);
 void dispc_set_lcd_display_type(enum omap_lcd_display_type type);
 void dispc_set_loadmode(enum omap_dss_load_mode mode);
 
-void dispc_set_default_color(enum omap_channel channel, u32 color);
 void dispc_set_trans_key(enum omap_channel ch,
 		enum omap_dss_color_key_type type,
 		u32 trans_key);
@@ -251,6 +250,8 @@ void dispc_setup_partial_planes(struct omap_display *display,
 void dispc_draw_partial_planes(struct omap_display *display);
 
 ssize_t dispc_print_clocks(char *buf, ssize_t size);
+void omap_dispc_set_default_color(enum omap_channel channel, u32 color);
+int omap_dispc_get_default_color(enum omap_channel channel);
 
 /* VENC */
 int venc_init(void);
diff --git a/arch/arm/plat-omap/dss/venc.c b/arch/arm/plat-omap/dss/venc.c
index 59abae1..9da9bdc 100644
--- a/arch/arm/plat-omap/dss/venc.c
+++ b/arch/arm/plat-omap/dss/venc.c
@@ -502,10 +502,24 @@ static void venc_get_timings(struct omap_display *display,
 	*timings = venc_panel.timings;
 }
 
+static void venc_display_set_bg_color(struct omap_display *display,
+			unsigned int color)
+{
+	omap_dispc_set_default_color(OMAP_DSS_CHANNEL_DIGIT, color);
+	dispc_go(OMAP_DSS_CHANNEL_DIGIT);
+}
+
+static int venc_display_get_bg_color(struct omap_display *display)
+{
+	return omap_dispc_get_default_color(OMAP_DSS_CHANNEL_DIGIT);
+}
+
 void venc_init_display(struct omap_display *display)
 {
 	display->panel = &venc_panel;
 	display->enable = venc_enable_display;
 	display->disable = venc_disable_display;
 	display->get_timings = venc_get_timings;
+	display->set_bg_color = venc_display_set_bg_color;
+	display->get_bg_color = venc_display_get_bg_color;
 }
diff --git a/arch/arm/plat-omap/include/mach/display.h b/arch/arm/plat-omap/include/mach/display.h
index a1d9f58..1ee41c0 100644
--- a/arch/arm/plat-omap/include/mach/display.h
+++ b/arch/arm/plat-omap/include/mach/display.h
@@ -431,6 +431,9 @@ struct omap_display {
 
 	int (*check_timings)(struct omap_display *display,
 			struct omap_video_timings *timings);
+	void (*set_bg_color)(struct omap_display *display,
+			unsigned int color);
+	int (*get_bg_color)(struct omap_display *display);
 	void (*set_timings)(struct omap_display *display,
 			struct omap_video_timings *timings);
 	void (*get_timings)(struct omap_display *display,
@@ -474,6 +477,6 @@ struct omap_overlay *omap_dss_get_overlay(int num);
 
 typedef void (*omap_dispc_isr_t) (void *arg, u32 mask);
 void *omap_dispc_register_isr(omap_dispc_isr_t isr, void *arg, u32 mask);
-int omap_dispc_unregister_isr(void* handle);
+int omap_dispc_unregister_isr(void *handle);
 
 #endif
-- 
1.6.0.3

