From 474d816a6dbf94f22f160fc21742f48ed6242af4 Mon Sep 17 00:00:00 2001
From: Sergio Aguirre <saaguirre@ti.com>
Date: Mon, 26 Jan 2009 15:19:41 -0600
Subject: [PATCH 234/364] OMAP3ISP: Core: Do idle mode settings in the ISP driver.

Signed-off-by: Sakari Ailus <sakari.ailus@nokia.com>
---
 drivers/media/video/isp/isp.c |   23 ++++++++++++++---------
 drivers/media/video/isp/isp.h |   12 ------------
 2 files changed, 14 insertions(+), 21 deletions(-)

diff --git a/drivers/media/video/isp/isp.c b/drivers/media/video/isp/isp.c
index 091881c..32ab1a9 100644
--- a/drivers/media/video/isp/isp.c
+++ b/drivers/media/video/isp/isp.c
@@ -412,9 +412,6 @@ void isp_release_resources(void)
 	return;
 }
 
-/* Flag to check first time of isp_get */
-static int off_mode;
-
 int isp_wait(int (*busy)(void), int wait_for_busy, int max_wait)
 {
 	int wait = 0;
@@ -754,9 +751,9 @@ EXPORT_SYMBOL(isp_get_xclk);
  *
  * Sets the power settings for the ISP, and SBL bus.
  **/
-void isp_power_settings(struct isp_sysc isp_sysconfig)
+static void isp_power_settings(int idle)
 {
-	if (isp_sysconfig.idle_mode) {
+	if (idle) {
 		isp_reg_writel(ISP_SYSCONFIG_AUTOIDLE |
 				(ISP_SYSCONFIG_MIDLEMODE_SMARTSTANDBY <<
 				ISP_SYSCONFIG_MIDLEMODE_SHIFT),
@@ -809,7 +806,6 @@ void isp_power_settings(struct isp_sysc isp_sysconfig)
 		isp_reg_writel(ISPCTRL_SBL_AUTOIDLE, OMAP3_ISP_IOMEM_MAIN, ISP_CTRL);
 	}
 }
-EXPORT_SYMBOL(isp_power_settings);
 
 #define BIT_SET(var, shift, mask, val)		\
 	do {					\
@@ -2222,7 +2218,9 @@ EXPORT_SYMBOL(isp_restore_ctx);
  **/
 int isp_get(void)
 {
+	static int has_context = 0;
 	int ret_err = 0;
+
 	DPRINTK_ISPCTRL("isp_get: old %d\n", isp_obj.ref_count);
 	mutex_lock(&(isp_obj.isp_mutex));
 	if (isp_obj.ref_count == 0) {
@@ -2263,12 +2261,16 @@ int isp_get(void)
 								" failed\n");
 			goto out_clk_enable_csi2_fclk;
 		}
-		if (off_mode == 1)
+
+		/* We don't want to restore context before saving it! */
+		if (has_context)
 			isp_restore_ctx();
+		else
+			has_context = 1;
 	}
 	isp_obj.ref_count++;
-	mutex_unlock(&(isp_obj.isp_mutex));
 
+	mutex_unlock(&(isp_obj.isp_mutex));
 
 	DPRINTK_ISPCTRL("isp_get: new %d\n", isp_obj.ref_count);
 	return isp_obj.ref_count;
@@ -2303,7 +2305,6 @@ int isp_put(void)
 	if (isp_obj.ref_count) {
 		if (--isp_obj.ref_count == 0) {
 			isp_save_ctx();
-			off_mode = 1;
 #if ISP_WORKAROUND
 			isp_buf_free();
 #endif
@@ -2482,6 +2483,10 @@ static int __init isp_init(void)
 	isp_af_init();
 	isp_csi2_init();
 
+	isp_get();
+	isp_power_settings(1);
+	isp_put();
+
 	return 0;
 }
 EXPORT_SYMBOL(isp_init);
diff --git a/drivers/media/video/isp/isp.h b/drivers/media/video/isp/isp.h
index 94482a3..7332f24 100644
--- a/drivers/media/video/isp/isp.h
+++ b/drivers/media/video/isp/isp.h
@@ -217,16 +217,6 @@ struct isp_interface_config {
 	} u;
 };
 
-/**
- * struct isp_sysc - ISP Power switches to set.
- * @reset: Flag for setting ISP reset.
- * @idle_mode: Flag for setting ISP idle mode.
- */
-struct isp_sysc {
-	char reset;
-	char idle_mode;
-};
-
 u32 isp_reg_readl(enum isp_mem_resources isp_mmio_range, u32 reg_offset);
 
 void isp_reg_writel(u32 reg_value, enum isp_mem_resources isp_mmio_range,
@@ -285,8 +275,6 @@ int isp_request_interface(enum isp_interface_type if_t);
 
 int isp_free_interface(enum isp_interface_type if_t);
 
-void isp_power_settings(struct isp_sysc);
-
 int isp_configure_interface(struct isp_interface_config *config);
 
 int isp_get(void);
-- 
1.6.0.3

