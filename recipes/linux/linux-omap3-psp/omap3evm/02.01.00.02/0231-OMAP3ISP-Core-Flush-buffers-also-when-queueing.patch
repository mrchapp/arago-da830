From 9cbf03b1f510027c9cd0ed11aee075b6fa640e2e Mon Sep 17 00:00:00 2001
From: Sergio Aguirre <saaguirre@ti.com>
Date: Mon, 26 Jan 2009 15:19:42 -0600
Subject: [PATCH 231/304] OMAP3ISP: Core: Flush buffers also when queueing.

Signed-off-by: Sakari Ailus <sakari.ailus@nokia.com>
---
 drivers/media/video/isp/isp.c |   23 +++++++----------------
 1 files changed, 7 insertions(+), 16 deletions(-)

diff --git a/drivers/media/video/isp/isp.c b/drivers/media/video/isp/isp.c
index 1628acd..e274f92 100644
--- a/drivers/media/video/isp/isp.c
+++ b/drivers/media/video/isp/isp.c
@@ -24,6 +24,8 @@
  * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  */
 
+#include <asm/cacheflush.h>
+
 #include <linux/delay.h>
 #include <linux/interrupt.h>
 #include <linux/clk.h>
@@ -985,7 +987,6 @@ int isp_configure_interface_bridge(u32 par_bridge)
 EXPORT_SYMBOL(isp_configure_interface_bridge);
 
 int isp_buf_process(struct isp_bufs *bufs);
-int isp_vbq_sync(struct videobuf_buffer *vb);
 
 /**
  * omap34xx_isp_isr - Interrupt Service Routine for Camera ISP module.
@@ -1431,22 +1432,10 @@ static void isp_buf_init(void)
  * isp_vbq_sync - Walks the pages table and flushes the cache for
  *                each page.
  **/
-int isp_vbq_sync(struct videobuf_buffer *vb)
+int isp_vbq_sync(struct videobuf_buffer *vb, int when)
 {
-	struct videobuf_dmabuf *vdma;
-	u32 sg_element_addr;
-	int i;
-
-	vdma = videobuf_to_dma(vb);
-
-	for (i = 0; i < vdma->sglen; i++) {
-		sg_element_addr = sg_dma_address(vdma->sglist + i);
-		/* Page align address */
-		sg_element_addr &= ~(PAGE_SIZE - 1);
+	flush_cache_all();
 
-		dma_sync_single_for_cpu(NULL, sg_element_addr, PAGE_SIZE,
-							DMA_FROM_DEVICE);
-	}
 	return 0;
 }
 
@@ -1526,7 +1515,7 @@ out:
 		 * We want to dequeue a buffer from the video buffer
 		 * queue. Let's do it!
 		 */
-		isp_vbq_sync(buf->vb);
+		isp_vbq_sync(buf->vb, DMA_FROM_DEVICE);
 		buf->vb->state = buf->vb_state;
 		buf->complete(buf->vb, buf->priv);
 	}
@@ -1547,6 +1536,8 @@ int isp_buf_queue(struct videobuf_buffer *vb,
 
 	BUG_ON(sglen < 0 || !sglist);
 
+	isp_vbq_sync(vb, DMA_TO_DEVICE);
+
 	spin_lock_irqsave(&bufs->lock, flags);
 
 	BUG_ON(ISP_BUFS_IS_FULL(bufs));
-- 
1.5.6

