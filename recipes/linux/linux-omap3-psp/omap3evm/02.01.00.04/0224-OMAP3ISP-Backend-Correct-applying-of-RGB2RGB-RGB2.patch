From 2b1e33c03c2c2c22339f571c99866d77fbd017fc Mon Sep 17 00:00:00 2001
From: ext Stanimir Varbanov <svarbanov@mm-sol.com>
Date: Mon, 26 Jan 2009 15:19:26 -0600
Subject: [PATCH 224/364] OMAP3ISP: Backend: Correct applying of RGB2RGB, RGB2YUV and WBAL

This patch apply correctly rgb2rgb, rgb2yuv matrixs and offsets,
also wbal coef

Signed-off-by: Stanimir Varbanov <svarbanov@mm-sol.com>
Signed-off-by: Sergio Aguirre <saaguirre@ti.com>
---
 drivers/media/video/isp/isppreview.c |   92 ++++++++++++++++++----------------
 1 files changed, 48 insertions(+), 44 deletions(-)

diff --git a/drivers/media/video/isp/isppreview.c b/drivers/media/video/isp/isppreview.c
index c80c666..c9b6236 100644
--- a/drivers/media/video/isp/isppreview.c
+++ b/drivers/media/video/isp/isppreview.c
@@ -1198,13 +1198,15 @@ EXPORT_SYMBOL_GPL(isppreview_enable_chroma_suppression);
  **/
 void isppreview_config_whitebalance(struct ispprev_wbal prev_wbal)
 {
+	u32 val;
 
 	isp_reg_writel(prev_wbal.dgain, OMAP3_ISP_IOMEM_PREV, ISPPRV_WB_DGAIN);
-	isp_reg_writel(prev_wbal.coef0 |
-				prev_wbal.coef1 << ISPPRV_WBGAIN_COEF1_SHIFT |
-				prev_wbal.coef2 << ISPPRV_WBGAIN_COEF2_SHIFT |
-				prev_wbal.coef3 << ISPPRV_WBGAIN_COEF3_SHIFT,
-				OMAP3_ISP_IOMEM_PREV, ISPPRV_WBGAIN);
+
+	val = (prev_wbal.coef0 << ISPPRV_WBGAIN_COEF0_SHIFT);
+	val |= (prev_wbal.coef1 << ISPPRV_WBGAIN_COEF1_SHIFT);
+	val |= (prev_wbal.coef2 << ISPPRV_WBGAIN_COEF2_SHIFT);
+	val |= (prev_wbal.coef3 << ISPPRV_WBGAIN_COEF3_SHIFT);
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_WBGAIN);
 
 	isp_reg_writel((ISPPRV_WBSEL_COEF0 << ISPPRV_WBSEL_N0_0_SHIFT) |
 			(ISPPRV_WBSEL_COEF1 << ISPPRV_WBSEL_N0_1_SHIFT) |
@@ -1223,7 +1225,6 @@ void isppreview_config_whitebalance(struct ispprev_wbal prev_wbal)
 			(ISPPRV_WBSEL_COEF2 << ISPPRV_WBSEL_N3_2_SHIFT) |
 			(ISPPRV_WBSEL_COEF3 << ISPPRV_WBSEL_N3_3_SHIFT),
 			OMAP3_ISP_IOMEM_PREV, ISPPRV_WBSEL);
-
 }
 EXPORT_SYMBOL_GPL(isppreview_config_whitebalance);
 
@@ -1285,32 +1286,33 @@ EXPORT_SYMBOL_GPL(isppreview_config_blkadj);
  **/
 void isppreview_config_rgb_blending(struct ispprev_rgbtorgb rgb2rgb)
 {
-	isp_reg_writel((rgb2rgb.matrix[0][0] << ISPPRV_RGB_MAT1_MTX_RR_SHIFT) |
-			(rgb2rgb.matrix[0][1] << ISPPRV_RGB_MAT1_MTX_GR_SHIFT),
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT1);
+	u32 val = 0;
 
-	isp_reg_writel((rgb2rgb.matrix[0][2] << ISPPRV_RGB_MAT2_MTX_BR_SHIFT) |
-			(rgb2rgb.matrix[1][0] << ISPPRV_RGB_MAT2_MTX_RG_SHIFT),
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT2);
+	val = (rgb2rgb.matrix[0][0] & 0xfff) << ISPPRV_RGB_MAT1_MTX_RR_SHIFT;
+	val |= (rgb2rgb.matrix[0][1] & 0xfff) << ISPPRV_RGB_MAT1_MTX_GR_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT1);
 
-	isp_reg_writel((rgb2rgb.matrix[1][1] << ISPPRV_RGB_MAT3_MTX_GG_SHIFT) |
-			(rgb2rgb.matrix[1][2] << ISPPRV_RGB_MAT3_MTX_BG_SHIFT),
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT3);
+	val = (rgb2rgb.matrix[0][2] & 0xfff) << ISPPRV_RGB_MAT2_MTX_BR_SHIFT;
+	val |= (rgb2rgb.matrix[1][0] & 0xfff) << ISPPRV_RGB_MAT2_MTX_RG_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT2);
 
-	isp_reg_writel((rgb2rgb.matrix[2][0] << ISPPRV_RGB_MAT4_MTX_RB_SHIFT) |
-			(rgb2rgb.matrix[2][1] << ISPPRV_RGB_MAT4_MTX_GB_SHIFT),
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT4);
+	val = (rgb2rgb.matrix[1][1] & 0xfff) << ISPPRV_RGB_MAT3_MTX_GG_SHIFT;
+	val |= (rgb2rgb.matrix[1][2] & 0xfff) << ISPPRV_RGB_MAT3_MTX_BG_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT3);
 
-	isp_reg_writel((rgb2rgb.matrix[2][2] << ISPPRV_RGB_MAT5_MTX_BB_SHIFT),
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT5);
+	val = (rgb2rgb.matrix[2][0] & 0xfff) << ISPPRV_RGB_MAT4_MTX_RB_SHIFT;
+	val |= (rgb2rgb.matrix[2][1] & 0xfff) << ISPPRV_RGB_MAT4_MTX_GB_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT4);
 
-	isp_reg_writel((rgb2rgb.offset[0] << ISPPRV_RGB_OFF1_MTX_OFFG_SHIFT) |
-			(rgb2rgb.offset[1] << ISPPRV_RGB_OFF1_MTX_OFFR_SHIFT),
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_OFF1);
+	val = (rgb2rgb.matrix[2][2] & 0xfff) << ISPPRV_RGB_MAT5_MTX_BB_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_MAT5);
 
-	isp_reg_writel(rgb2rgb.offset[2] << ISPPRV_RGB_OFF2_MTX_OFFB_SHIFT,
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_OFF2);
+	val = (rgb2rgb.offset[0] & 0x3ff) << ISPPRV_RGB_OFF1_MTX_OFFG_SHIFT;
+	val |= (rgb2rgb.offset[1] & 0x3ff) << ISPPRV_RGB_OFF1_MTX_OFFR_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_OFF1);
 
+	val = (rgb2rgb.offset[2] & 0x3ff) << ISPPRV_RGB_OFF2_MTX_OFFB_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_RGB_OFF2);
 }
 EXPORT_SYMBOL_GPL(isppreview_config_rgb_blending);
 
@@ -1321,25 +1323,27 @@ EXPORT_SYMBOL_GPL(isppreview_config_rgb_blending);
  **/
 void isppreview_config_rgb_to_ycbcr(struct ispprev_csc prev_csc)
 {
-	isp_reg_writel(prev_csc.matrix[0][0] << ISPPRV_CSC0_RY_SHIFT |
-				prev_csc.matrix[0][1] << ISPPRV_CSC0_GY_SHIFT |
-				prev_csc.matrix[0][2] << ISPPRV_CSC0_BY_SHIFT,
-				OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC0);
-
-	isp_reg_writel(prev_csc.matrix[1][0] << ISPPRV_CSC1_RCB_SHIFT |
-			prev_csc.matrix[1][1] << ISPPRV_CSC1_GCB_SHIFT |
-			prev_csc.matrix[1][2] << ISPPRV_CSC1_BCB_SHIFT,
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC1);
-
-	isp_reg_writel(prev_csc.matrix[2][0] << ISPPRV_CSC2_RCR_SHIFT |
-			prev_csc.matrix[2][1] << ISPPRV_CSC2_GCR_SHIFT |
-			prev_csc.matrix[2][2] << ISPPRV_CSC2_BCR_SHIFT,
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC2);
-
-	isp_reg_writel(prev_csc.offset[0] << ISPPRV_CSC_OFFSET_CR_SHIFT |
-			prev_csc.offset[1] << ISPPRV_CSC_OFFSET_CB_SHIFT |
-			prev_csc.offset[2] << ISPPRV_CSC_OFFSET_Y_SHIFT,
-			OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC_OFFSET);
+	u32 val = 0;
+
+	val = (prev_csc.matrix[0][0] & 0x3ff) << ISPPRV_CSC0_RY_SHIFT;
+	val |= (prev_csc.matrix[0][1] & 0x3ff) << ISPPRV_CSC0_GY_SHIFT;
+	val |= (prev_csc.matrix[0][2] & 0x3ff) << ISPPRV_CSC0_BY_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC0);
+
+	val = (prev_csc.matrix[1][0] & 0x3ff) << ISPPRV_CSC1_RCB_SHIFT;
+	val |= (prev_csc.matrix[1][1] & 0x3ff) << ISPPRV_CSC1_GCB_SHIFT;
+	val |= (prev_csc.matrix[1][2] & 0x3ff) << ISPPRV_CSC1_BCB_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC1);
+
+	val = (prev_csc.matrix[2][0] & 0x3ff) << ISPPRV_CSC2_RCR_SHIFT;
+	val |= (prev_csc.matrix[2][1] & 0x3ff) << ISPPRV_CSC2_GCR_SHIFT;
+	val |= (prev_csc.matrix[2][2] & 0x3ff) << ISPPRV_CSC2_BCR_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC2);
+
+	val = (prev_csc.offset[0] & 0xff) << ISPPRV_CSC_OFFSET_CR_SHIFT;
+	val |= (prev_csc.offset[1] & 0xff) << ISPPRV_CSC_OFFSET_CB_SHIFT;
+	val |= (prev_csc.offset[2] & 0xff) << ISPPRV_CSC_OFFSET_Y_SHIFT;
+	isp_reg_writel(val, OMAP3_ISP_IOMEM_PREV, ISPPRV_CSC_OFFSET);
 }
 EXPORT_SYMBOL_GPL(isppreview_config_rgb_to_ycbcr);
 
-- 
1.5.6

